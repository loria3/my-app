{"version":3,"sources":["assets/a.jpg","App.js","reportWebVitals.js","index.js"],"names":["BasicExample","to","exact","path","About","Dashboard","Home","href","src","logo","style","width","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,MAA0B,8BCI1B,SAASA,IACtB,OACE,cAAC,IAAD,UACE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,aAAT,4BAIJ,uBASA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,aAAZ,SACE,cAACE,EAAD,cAWZ,SAASD,IACP,OACE,8BACE,yCAKN,SAASC,IACP,OACE,8BACE,6CAKN,IAAMC,EAAO,WACX,OACE,qCACE,cAAC,cAAD,UACE,mBAAGC,KAAK,+CAAR,SACE,qBAAKC,IAAKC,EAAMC,MAAO,CAAEC,MAAO,QAAUC,IAAI,aAGlD,cAAC,aAAD,UACE,mBAAGL,KAAK,+CAAR,SACE,qBAAKC,IAAKC,EAAMC,MAAO,CAAEC,MAAO,QAAUC,IAAI,iBC9DzCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7fe4f4e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/a.7654f13a.jpg\";","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { BrowserView, MobileView } from \"react-device-detect\";\nimport logo from \"./assets/a.jpg\";\nexport default function BasicExample() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  return (\n    <div>\n      <h2>Dashboard</h2>\n    </div>\n  );\n}\n\nconst Home = () => {\n  return (\n    <>\n      <BrowserView>\n        <a href=\"ibetterMe://article/5fba3df617b25d11753edf7c\">\n          <img src={logo} style={{ width: \"auto\" }} alt=\"logo\"></img>\n        </a>\n      </BrowserView>\n      <MobileView>\n        <a href=\"ibetterMe://article/5fba3df617b25d11753edf7c\">\n          <img src={logo} style={{ width: \"auto\" }} alt=\"logo\"></img>\n        </a>\n      </MobileView>\n    </>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}